{% javascripts
    '@OroGridBundle/Resources/public/lib/backbone-pageable.js'
    '@OroGridBundle/Resources/public/lib/backgrid/backgrid.js'
    '@OroGridBundle/Resources/public/lib/backgrid/extensions/paginator/backgrid-paginator.js'
    '@OroGridBundle/Resources/public/js/app/paginator.js'
    '@OroGridBundle/Resources/public/js/app/datagrid.js'
    '@OroGridBundle/Resources/public/js/app/pageablecollection.js'
    output='js/acme.grid.js'
%}
    <script type="text/javascript" src="{{ asset_url }}"></script>
{% endjavascripts %}

<script type="text/javascript">
    {% set datagridName = datagrid.name ~ 'Datagrid' %}
    {% set collectionName = datagridName ~ 'Collection' %}

    {% set constantTypePrefix = 'Oro\\Bundle\\GridBundle\\Field\\FieldDescriptionInterface::' %}

    _.extend(OroApp, {
        scope: {
            {{ datagridName }}: {
                grid: {
                    columns: [
                        {% for column in datagrid.columns %}
                            {
                                name: {{ column.name|json_encode|raw }},
                                label: {{ column.label|json_encode|raw }},
                                {% if column.type == constant(constantTypePrefix ~ 'TYPE_DATE') %}
                                    cell: Backgrid.DateCell
                                {% elseif column.type == constant(constantTypePrefix ~ 'TYPE_DATETIME') %}
                                    cell: Backgrid.DatetimeCell
                                {% elseif column.type == constant(constantTypePrefix ~ 'TYPE_DECIMAL') %}
                                    cell: Backgrid.NumberCell
                                {% elseif column.type == constant(constantTypePrefix ~ 'TYPE_INTEGER') %}
                                    cell: Backgrid.IntegerCell.extend({ orderSeparator: '' })
                                {% elseif column.type == constant(constantTypePrefix ~ 'TYPE_OPTIONS') %}
                                    // TODO use Backgrid.SelectCell with source data
                                    cell: Backgrid.StringCell
                                {% else %}
                                    cell: Backgrid.StringCell
                                {% endif %}
                                {% if not loop.last %},{% endif %}
                            }{% if not loop.last %},{% endif %}
                        {% endfor %}
                    ]
                },
                collection: {
                    inputName: "{{ datagrid.name|raw }}",
                    url: {{ datagrid.routeGenerator.generateUrl(null, {'_format': 'json'})|json_encode|raw }},
                    state: {
                        currentPage:  {{ datagrid.pager.page|json_encode|raw }},
                        pageSize:     {{ datagrid.pager.maxPerPage|json_encode|raw }},
                        totalRecords: {{ datagrid.pager.nbResults|json_encode|raw }}
                    }
                }
            }
        }
    });

    $(function() {
        // Initialize a new collection and grid instance
        var {{ collectionName }} = new OroApp.PageableCollection(
            [],
            OroApp.scope.{{ datagridName }}.collection
        );
        var {{ datagridName }}Parameters = _.extend(
            {
                collection: {{ collectionName }},
                className: 'datagrid grid table-hover table table-bordered table-condensed'
            },
            OroApp.scope.{{ datagridName }}.grid
        );

        // Basic template templa
        var myTemplate = _.template($('#gridTemplate').html());
        $("{{ selector }}").append(myTemplate);

        // Render the grid and attach the root to your HTML document
        var {{ datagridName }} = new OroApp.Datagrid({{ datagridName }}Parameters);
        $("#{{ datagridName }}Body").html({{ datagridName }}.render().$el);
        {{ collectionName }}.fetch();

        // render paginator
        var {{ datagridName }}PaginatorParameters = _.clone({{ datagridName }}Parameters);
        var paginator = new OroApp.Paginator(_.extend(
            {{ datagridName }}PaginatorParameters,
            {
                tagName: 'ul',
                className: "icons-holder"
            }
        ));
        $(paginator.render().$el).insertAfter("#{{ datagridName }}Paginator");
    });
</script>

<script type="text/template" id="gridTemplate">
    <div class="grid-toolbar well-small">
        <div class="pull-right form-horizontal">
            <label class="control-label">View per page: &nbsp;</label>
            <div class="btn-group">
                <button data-toggle="dropdown" class="btn dropdown-toggle">{{ datagrid.pager.maxPerPage }}<span class="caret"></span></button>
                <ul class="dropdown-menu pull-right">
                    <li><a href="#">10</a></li>
                    <li><a href="#">25</a></li>
                    <li><a href="#">50</a></li>
                </ul>
            </div>
            <div class="btn-group icons-holder ">
                <button class="btn"><i class="icon-eye2-open hide-text">hide</i></button>
                <button class="btn dropdown-toggle" data-toggle="dropdown"><i class="icon-sort hide-text">copy</i></button>
                <ul class="dropdown-menu pull-right">
                    <li>
                        <div class="holder-height">
                            <ul class="unstyled well-small">
                                {% for column in datagrid.columns %}
                                    <li>
                                        <label class="checkbox">
                                            <input type="checkbox" />
                                            {{ column.label }}
                                        </label>
                                    </li>
                                {% endfor %}
                            </ul>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
        <div class="pull-left">
            <div class="btn-group icons-holder">
                <button class="btn"><i class="icon-edit hide-text">edit</i></button>
                <button class="btn"><i class="icon-copy hide-text">copy</i></button>
                <button class="btn"><i class="icon-pin hide-text">pin/unpin</i></button>
                <button class="btn"><i class="icon-trash hide-text">remove</i></button>
            </div>
            <div class="btn-group">
                <button data-toggle="dropdown" class="btn dropdown-toggle">Status: <strong>All</strong><span class="caret"></span></button>
                <ul class="dropdown-menu">
                    <li><a href="#">only short</a></li>
                    <li><a href="#">this is long text for test</a></li>
                </ul>
            </div>
            <button id="open-loading" class="btn">open loading</button>
        </div>
        <div class="pagination pagination-centered">
            <label class="dib" id="{{ datagridName }}Paginator">Page:</label>
            {# paginator will be inserted here #}
            <label class="dib">of {{ datagrid.pager.lastPage }} | {{ datagrid.pager.nbResults }} records</label>
            <!--
            <ul class="icons-holder">
                <li class="disabled"><a href="#"><i class="icon-chevron-left hide-text">prew</i></a></li>
                <li><a href="#">5</a></li>
                <li><a href="#"><i class="icon-chevron-right hide-text">Next</i></a></li>
            </ul>
            -->
        </div>
    </div>
    <div class="clearfix" id="{{ datagridName }}Body"></div>
</script>
