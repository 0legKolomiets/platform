{% javascripts
    '@OroUIBundle/Resources/public/lib/backbone.bootstrap-modal.js'

    '@OroGridBundle/Resources/public/lib/backbone-pageable.js'
    '@OroGridBundle/Resources/public/lib/backgrid/backgrid.js'
    '@OroGridBundle/Resources/public/lib/moment/moment.js'
    '@OroGridBundle/Resources/public/lib/backgrid/extensions/moment-cell/backgrid-moment-cell.js'

    '@OroFilterBundle/Resources/public/lib/multiselect/jquery.multiselect.js'
    '@OroFilterBundle/Resources/public/lib/multiselect/jquery.multiselect.filter.js'

    '@OroFilterBundle/Resources/public/lib/jquery-ui-timepicker-addon.js'

    '@OroGridBundle/Resources/public/js/app/datagrid/action/datagrid-action-launcher.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/action/datagrid-action.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/action/datagrid-action-navigate.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/action/datagrid-action-delete.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/action/datagrid-action.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/action/datagrid-action-cell.js'

    '@OroGridBundle/Resources/public/js/app/datagrid/datagrid-header-cell.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/datagrid-header.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/datagrid-body.js'

    '@OroGridBundle/Resources/public/js/app/datagrid/datagrid-pagination.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/pagination/datagrid-pagination-input.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/datagrid-pagesize.js'
    '@OroGridBundle/Resources/public/js/app/datagrid/datagrid-toolbar.js'

    '@OroFilterBundle/Resources/public/js/app/filter/formatter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/multiselectdecorator.js'

    '@OroFilterBundle/Resources/public/js/app/filter/abstractfilter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/textfilter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/choicefilter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/numberfilter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/datefilter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/datetimefilter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/selectfilter.js'
    '@OroFilterBundle/Resources/public/js/app/filter/multiselectfilter.js'

    '@OroFilterBundle/Resources/public/js/app/filter/list.js'

    '@OroGridBundle/Resources/public/js/app/datagrid/filter/datagrid-filter-list.js'

    '@OroGridBundle/Resources/public/js/app/backgrid-formatter.js'

    '@OroGridBundle/Resources/public/js/app/loadingmask.js'
    '@OroGridBundle/Resources/public/js/app/datagrid.js'

    '@OroGridBundle/Resources/public/js/app/datagrid/datagrid-router.js'

    '@OroGridBundle/Resources/public/js/app/pageablecollection.js'

    output='js/oroapp.grid.js'
%}
    <script type="text/javascript" src="{{ asset_url }}"></script>
{% endjavascripts %}

<script type="text/javascript">
    {% set datagridName = datagrid.name ~ 'Datagrid' %}
    {% set collectionName = datagridName ~ 'Collection' %}

    {% set columnTypePrefix = 'Oro\\Bundle\\GridBundle\\Field\\FieldDescriptionInterface::' %}
    {% set filterTypePrefix = 'Oro\\Bundle\\GridBundle\\Filter\\FilterInterface::' %}
    {% set actionTypePrefix = 'Oro\\Bundle\\GridBundle\\Action\\ActionInterface::' %}
    {% set dateTypeFilterPrefix = 'Sonata\\AdminBundle\\Form\\Type\\Filter\\DateRangeType::' %}

    _.extend(OroApp, {
        scope: {
            {{ datagridName|json_encode|raw }}: {
                grid: {
                    columns: [
                        {% for column in datagrid.columns %}
                        {
                            name: {{ column.name|json_encode|raw }},
                            label: {{ column.label|json_encode|raw }},
                            sortable: {{ column.sortable|json_encode|raw }},
                            editable: false,
                            {% if column.type == constant(columnTypePrefix ~ 'TYPE_DATE') %}
                                cell: Backgrid.Extension.MomentCell.extend({
                                    modelFormat:   "YYYY-MM-DD",
                                    displayFormat: "MM/DD/YYYY"
                                })
                            {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_DATETIME') %}
                                cell: Backgrid.Extension.MomentCell.extend({
                                    modelFormat:   "YYYY-MM-DD hh:mm:ss",
                                    displayFormat: "MM/DD/YYYY hh:mm a"
                                })
                            {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_DECIMAL') %}
                                cell: Backgrid.NumberCell
                            {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_INTEGER') %}
                                cell: Backgrid.IntegerCell.extend({ orderSeparator: '' })
                            {% else %}
                                cell: Backgrid.StringCell
                            {% endif %}
                        }{% if not loop.last %},{% endif %}
                        {% endfor %}
                    ],
                    filters: {
                        {% for filter in datagrid.filters %}
                            {{ filter.name|json_encode|raw }}:
                            {% set filterType = filter.getOption('filter_type') %}
                            {% if filterType == constant(filterTypePrefix ~ 'TYPE_STRING')
                                or filterType == constant(filterTypePrefix ~ 'TYPE_FLEXIBLE_STRING')
                            %}
                                OroApp.createInstanceFromConstructor(OroApp.Filter.ChoiceFilter.extend({
                                    name: {{ filter.name|json_encode|raw }},
                                    label: {{ filter.getOption('label')|json_encode|raw }},
                                    enabled: {{ filter.getOption('show_filter') ? 'true' : 'false' }},
                                    choices: {
                                        1: 'contains',
                                        2: 'not contains',
                                        3: 'equal'
                                    }
                                }))
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_NUMBER')
                                or filterType == constant(filterTypePrefix ~ 'TYPE_FLEXIBLE_NUMBER')
                            %}
                                OroApp.createInstanceFromConstructor(OroApp.Filter.NumberFilter.extend({
                                    name: '{{ filter.name }}',
                                    label: '{{ filter.getOption('label') }}',
                                    enabled: {{ filter.getOption('show_filter') ? 'true' : 'false' }},
                                    choices: {
                                        1: '>=',
                                        2: '>',
                                        3: '=',
                                        4: '<=',
                                        5: '<'
                                    },
                                    formatter: {{ filter.getOption('data_type')|json_encode|raw }}
                                }))
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_DATE')
                                or filterType == constant(filterTypePrefix ~ 'TYPE_FLEXIBLE_DATE')
                            %}
                                OroApp.createInstanceFromConstructor(OroApp.Filter.DateFilter.extend({
                                    name: {{ filter.name|json_encode|raw }},
                                    label: {{ filter.getOption('label')|json_encode|raw }},
                                    enabled: {{ filter.getOption('show_filter') ? 'true' : 'false' }},
                                    choices: {
                                        1: 'between',
                                        2: 'not between'
                                    },
                                    typeValues: {
                                        between:    {{ constant(dateTypeFilterPrefix ~ 'TYPE_BETWEEN')|json_encode|raw }},
                                        notBetween: {{ constant(dateTypeFilterPrefix ~ 'TYPE_NOT_BETWEEN')|json_encode|raw }}
                                    },
                                    externalWidgetOptions: {
                                        dateFormat: 'mm/dd/yy',
                                        firstDay: 0
                                    }
                                }))
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_DATETIME')
                                or filterType == constant(filterTypePrefix ~ 'TYPE_FLEXIBLE_DATETIME')
                            %}
                                OroApp.createInstanceFromConstructor(OroApp.Filter.DateTimeFilter.extend({
                                    name: {{ filter.name|json_encode|raw }},
                                    label: {{ filter.getOption('label')|json_encode|raw }},
                                    enabled: {{ filter.getOption('show_filter') ? 'true' : 'false' }},
                                    choices: {
                                        1: 'between',
                                        2: 'not between'
                                    },
                                    typeValues: {
                                        between:    {{ constant(dateTypeFilterPrefix ~ 'TYPE_BETWEEN')|json_encode|raw }},
                                        notBetween: {{ constant(dateTypeFilterPrefix ~ 'TYPE_NOT_BETWEEN')|json_encode|raw }}
                                    },
                                    externalWidgetOptions: {
                                        dateFormat: 'mm/dd/yy',
                                        timeFormat: 'hh:mm tt',
                                        firstDay: 0
                                    }
                                }))
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_FLEXIBLE_OPTIONS') %}
                                {% if filter.getOption('multiple') %}
                                    OroApp.createInstanceFromConstructor(OroApp.Filter.MultiSelectFilter.extend({
                                        name: {{ filter.name|json_encode|raw }},
                                        label: {{ filter.getOption('label')|json_encode|raw }},
                                        enabled: {{ filter.getOption('show_filter') ? 'true' : 'false' }},
                                        options: {{ filter.valueOptions|json_encode|raw }}
                                    }))
                                {% else %}
                                    OroApp.createInstanceFromConstructor(OroApp.Filter.SelectFilter.extend({
                                        name: {{ filter.name|json_encode|raw }},
                                        label: {{ filter.getOption('label')|json_encode|raw }},
                                        enabled: {{ filter.getOption('show_filter') ? 'true' : 'false' }},
                                        options: {{ filter.valueOptions|json_encode|raw }}
                                    }))
                                {% endif %}
                            {% else %}
                                OroApp.createInstanceFromConstructor(OroApp.Filter.TextFilter.extend({
                                    name: {{ filter.name|json_encode|raw }},
                                    label: {{ filter.getOption('label')|json_encode|raw }},
                                    enabled: {{ filter.getOption('show_filter') ? 'true' : 'false' }}
                                }))
                            {% endif %}
                            {% if not loop.last %},{% endif %}
                        {% endfor %}
                    },
                    actions: {
                        {% for action in datagrid.rowActions %}
                            {{ action.name|json_encode|raw }}:
                            {% if action.type == constant(actionTypePrefix ~ 'TYPE_DELETE') %}
                                OroApp.DatagridActionDelete.extend({{ action.options|json_encode|raw }})
                            {% else %}
                                OroApp.DatagridActionNavigate.extend({{ action.options|json_encode|raw }})
                            {% endif %}
                            {% if not loop.last %},{% endif %}
                        {% endfor %}
                    },
                    entityHint : {{ datagrid.entityHint|capitalize|json_encode|raw }},
                    {% set entityHint = datagrid.entityHint ? datagrid.entityHint : 'records' %}
                    noDataHint : {{ 'oro_grid.no_data_hint %entityHint%'|trans({'%entityHint%': entityHint}, 'OroGridBundle')|json_encode|raw }}
                },
                collection: {
                    inputName: {{ datagrid.name|json_encode|raw }},
                    url: {{ datagrid.routeGenerator.generateUrl(null, {'_format': 'json'})|json_encode|raw }},
                    state: {
                        currentPage:  {{ datagrid.pager.page|json_encode|raw }},
                        pageSize:     {{ datagrid.pager.maxPerPage|json_encode|raw }},
                        totalRecords: {{ datagrid.pager.nbResults|json_encode|raw }}
                    }
                }
            }
        }
    });

    $(function() {
        var containerSelector = {{ selector|json_encode|raw }};
        var datagridTemplateSelector = {{ ("#" ~ datagridName ~ "GridTemplate")|json_encode|raw }};
        var datagridName = {{ datagridName|json_encode|raw }};
        var datagridFiltersSelector = {{ ("#" ~ datagridName ~ "Filters")|json_encode|raw }};
        var datagridBodySelector = {{ ("#" ~ datagridName ~ "Body")|json_encode|raw }};
        var datagridOptions = OroApp.scope[datagridName];

        var initDatagrid = function(
            datagridOptions,
            datagridTemplateSelector,
            containerSelector,
            datagridFiltersSelector,
            datagridBodySelector
        ) {
            // Initialize grid collection
            var datagridCollection = new OroApp.PageableCollection(
                [],
                datagridOptions.collection
            );

            // Basic grid layout
            var template = _.template($(datagridTemplateSelector).html());
            $(containerSelector).append(template);

            // Grid
            var datagridParameters = _.extend(
                {
                    collection: datagridCollection
                },
                datagridOptions.grid
            );
            var datagrid = new OroApp.Datagrid(datagridParameters);
            $(datagridBodySelector).html(datagrid.render().$el);

            // Title
            var titleParameters = _.extend(
                {
                    tagName: 'div',
                    className: 'navigation container-fluid'
                },
                datagridOptions.grid
            );

            // Filters
            var filterListParameters = _.extend(
                {
                    collection: datagridCollection
                },
                datagridOptions.grid
            );
            var filtersList = new OroApp.DatagridFilterList(filterListParameters);
            $(datagridFiltersSelector).html(filtersList.render().$el);

            // Register router and start history
            var router = new OroApp.DatagridRouter({
                collection: datagridCollection
            });
        };

        initDatagrid(
            datagridOptions,
            datagridTemplateSelector,
            containerSelector,
            datagridFiltersSelector,
            datagridBodySelector
        );

        Backbone.history.start();
    });
</script>

<script type="text/template" id="{{ datagridName }}GridTemplate">
    <div class="clearfix" id="{{ datagridName }}Title"></div>
    <div class="clearfix" id="{{ datagridName }}Filters"></div>
    <div class="clearfix" id="{{ datagridName }}Body"></div>
</script>
