{% javascripts
'@OroGridBundle/Resources/public/lib/backbone-pageable.js'
'@OroGridBundle/Resources/public/lib/backgrid/backgrid.js'

'@OroGridBundle/Resources/public/js/app/datagrid-headercell.js'
'@OroGridBundle/Resources/public/js/app/datagrid-header.js'

'@OroGridBundle/Resources/public/js/app/datagrid-pagination.js'
'@OroGridBundle/Resources/public/js/app/datagrid-pagesize.js'
'@OroGridBundle/Resources/public/js/app/datagrid-toolbar.js'

'@OroGridBundle/Resources/public/js/app/datagrid-filter.js'
'@OroGridBundle/Resources/public/js/app/datagrid.js'
'@OroGridBundle/Resources/public/js/app/pageablecollection.js'

output='js/acme.grid.js'
%}
<script type="text/javascript" src="{{ asset_url }}"></script>
{% endjavascripts %}

<script type="text/javascript">
    {% set datagridName = datagrid.name ~ 'Datagrid' %}
    {% set collectionName = datagridName ~ 'Collection' %}

    {% set columnTypePrefix = 'Oro\\Bundle\\GridBundle\\Field\\FieldDescriptionInterface::' %}
    {% set filterTypePrefix = 'Oro\\Bundle\\GridBundle\\Filter\\FilterInterface::' %}

    _.extend(OroApp, {
        scope: {
            {{ datagridName }}: {
                grid: {
                    columns: [
                        {% for column in datagrid.columns %}
                        {
                            name: {{ column.name|json_encode|raw }},
                            label: {{ column.label|json_encode|raw }},
                            sortable: {{ column.sortable|json_encode|raw }},
                            {% if column.type == constant(columnTypePrefix ~ 'TYPE_DATE') %}
                                cell: Backgrid.DateCell
                            {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_DATETIME') %}
                                cell: Backgrid.DatetimeCell
                            {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_DECIMAL') %}
                                cell: Backgrid.NumberCell
                            {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_INTEGER') %}
                                cell: Backgrid.IntegerCell.extend({ orderSeparator: '' })
                            {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_OPTIONS') %}
                                // TODO use Backgrid.SelectCell with source data
                                cell: Backgrid.StringCell
                            {% else %}
                                cell: Backgrid.StringCell
                            {% endif %}
                            {% if not loop.last %},{% endif %}
                        }{% if not loop.last %},{% endif %}
                        {% endfor %}
                    ],
                    filters: [
                        {% for filter in datagrid.filters %}
                            {% set filterType = filter.getOption('filter_type') %}
                            {% if filterType == constant(filterTypePrefix ~ 'TYPE_CHOICE')
                                or filterType == constant(filterTypePrefix ~ 'TYPE_NUMBER')
                                or filterType == constant(filterTypePrefix ~ 'TYPE_STRING')
                            %}
                                OroApp.ChoiceFilter.extend({
                                    inputName : '{{ filter.name }}',
                                    inputHint : '{{ filter.getOption('label') }}',
                                    choices:    {{ filter.typeOptions|json_encode|raw }}
                                })
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_DATE') %}
                                OroApp.DateFilter.extend({
                                    inputName : '{{ filter.name }}',
                                    inputHint : '{{ filter.getOption('label') }}',
                                    choices:    {{ filter.typeOptions|json_encode|raw }}
                                })
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_DATETIME') %}
                                OroApp.DateTimeFilter.extend({
                                    inputName : '{{ filter.name }}',
                                    inputHint : '{{ filter.getOption('label') }}',
                                    choices:    {{ filter.typeOptions|json_encode|raw }}
                                })
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_DATE_RANGE') %}
                                OroApp.DateRangeFilter.extend({
                                    inputName : '{{ filter.name }}',
                                    inputHint : '{{ filter.getOption('label') }}',
                                    choices:    {{ filter.typeOptions|json_encode|raw }}
                                })
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_DATETIME_RANGE') %}
                                OroApp.DateTimeRangeFilter.extend({
                                    inputName : '{{ filter.name }}',
                                    inputHint : '{{ filter.getOption('label') }}',
                                    choices:    {{ filter.typeOptions|json_encode|raw }}
                                })
                            {% elseif filterType == constant(filterTypePrefix ~ 'TYPE_BOOLEAN')
                                or filterType == constant(filterTypePrefix ~ 'TYPE_FLEXIBLE_OPTIONS')
                            %}
                                OroApp.SelectFilter.extend({
                                    inputName : '{{ filter.name }}',
                                    inputHint : '{{ filter.getOption('label') }}',
                                    options:    {{ filter.valueOptions|json_encode|raw }}
                            })
                            {% else %}
                                OroApp.Filter.extend({
                                    inputName : '{{ filter.name }}',
                                    inputHint : '{{ filter.getOption('label') }}'
                                })
                            {% endif %}
                            {% if not loop.last %},{% endif %}
                        {% endfor %}
                    ]
                },
                collection: {
                    inputName: "{{ datagrid.name|raw }}",
                    url: {{ datagrid.routeGenerator.generateUrl(null, {'_format': 'json'})|json_encode|raw }},
                    state: {
                        currentPage:  {{ datagrid.pager.page|json_encode|raw }},
                        pageSize:     {{ datagrid.pager.maxPerPage|json_encode|raw }},
                        totalRecords: {{ datagrid.pager.nbResults|json_encode|raw }}
                    }
                }
            }
        }
    });

    $(function() {
        var containerSelector = {{ selector|json_encode|raw }};
        var datagridTemplateSelector = {{ ("#" ~ datagridName ~ "GridTemplate")|json_encode|raw }};
        var datagridName = {{ datagridName|json_encode|raw }};
        var datagridFiltersSelector = {{ ("#" ~ datagridName ~ "Filters")|json_encode|raw }};
        var datagridToolbarSelector = {{ ("#" ~ datagridName ~ "Toolbar")|json_encode|raw }};
        var datagridBodySelector = {{ ("#" ~ datagridName ~ "Body")|json_encode|raw }};
        var datagridOptions = OroApp.scope[datagridName];

        var initDatagrid = function(
                datagridOptions,
                datagridTemplateSelector,
                containerSelector,
                datagridFiltersSelector,
                datagridToolbarSelector,
                datagridBodySelector
                ) {
            // Initialize a new collection and grid instance
            var datagridCollection = new OroApp.PageableCollection(
                [],
                datagridOptions.collection
            );
            var datagridParameters = _.extend(
                {
                    collection: datagridCollection
                },
                datagridOptions.grid
            );
            var filterListParameters = _.extend(
                {
                    collection: datagridCollection,
                    tagName: 'div',
                    className: 'filter-box container-fluid',
                    addButtonHint: '+ Add another'
                },
                datagridOptions.grid
            );

            // Basic grid template
            var template = _.template($(datagridTemplateSelector).html());
            $(containerSelector).append(template);

            // Render the grid and attach the root to your HTML document
            var datagrid = new OroApp.Datagrid(datagridParameters);
            $(datagridBodySelector).html(datagrid.render().$el);
            datagridCollection.fetch();

            // Toolbar parameters
            var datagridToolbarParameters = {
                collection: datagridCollection
            };
            var pager = new OroApp.DatagridToolbar(datagridToolbarParameters);
            $(datagridToolbarSelector).append($(pager.render().$el));

            // Render filters
            var filtersList = new OroApp.FilterList(filterListParameters);
            $(datagridFiltersSelector).html(filtersList.render().$el);
        };

        initDatagrid(
            datagridOptions,
            datagridTemplateSelector,
            containerSelector,
            datagridFiltersSelector,
            datagridToolbarSelector,
            datagridBodySelector
        );
    });
</script>

<script type="text/template" id="{{ datagridName }}GridTemplate">
    <div class="clearfix" id="{{ datagridName }}Filters"></div>
    <div class="clearfix" id="{{ datagridName }}Toolbar"></div>
    <div class="clearfix" id="{{ datagridName }}Body"></div>
</script>
